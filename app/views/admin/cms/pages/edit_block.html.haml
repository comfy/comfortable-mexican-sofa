#editorSubmitStatusWrapper{style: "display:none"}
  %span#editorSubmitStatus
= form_for :block, html: {id: "inlineEditor"}, url: update_block_admin_cms_page_path(@page), data: {remote: true} do |f|
  = f.hidden_field "id", value: @block.id
  %a#closeEditor{href: "#"} &times;
  %span#editorTitle Edit your content.
  #wysihtml5-toolbar{style: "display: none;"}
    %a{"data-wysihtml5-command" => "bold"} B
    %a{"data-wysihtml5-command" => "italic"} I
    / Some wysihtml5 commands require extra parameters
    / commenting this out for now. But maybe in the future dynamically create these based on the color scheme in our 'wizard'
    / <a data-wysihtml5-command="foreColor" data-wysihtml5-command-value="red">red</a> <a data-wysihtml5-command="foreColor" data-wysihtml5-command-value="green">green</a> <a data-wysihtml5-command="foreColor" data-wysihtml5-command-value="blue">blue</a>
    / Some wysihtml5 commands like 'createLink' require extra paramaters specified by the user (eg. href)
    %a{"data-wysihtml5-command" => "createLink"} Link
    %div{"data-wysihtml5-dialog" => "createLink", style: "display: none;"}
      %label
        Link:
        %input.text{"data-wysihtml5-dialog-field" => "href", value: "http://"}/
      %a{"data-wysihtml5-dialog-action" => "save"} OK
      %a{"data-wysihtml5-dialog-action" => "cancel"} Cancel
  = f.text_area "content", {id: "wysihtml5-textarea", placeholder: "Enter your text ...", value: @block.content}
  = f.submit "Save", id: "submitChanges"